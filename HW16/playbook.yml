- name: Create Instance with Docker and Remove
  hosts: localhost
  gather_facts: no
  vars:
    aws_region: us-east-1
    instance_type: t2.micro
    ami: ami-0360c520857e3138f
    key_name: devops_september
    vpc_subnet_id: subnet-091c355c067bc8713
  tasks:
    - name: Create E2
      amazon.aws.ec2_instance:
        name: "serg"
        key_name: "{{ key_name }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        instance_type: "{{ instance_type  }}"
        security_group: default
        network:
          associate_public_ip_address: yes
        image_id: "{{ ami }}"
        wait: yes
      register: ec2

    - name: Show EC2 info
      debug:
        var: ec2

    - name: Save instance ID for later
      set_fact:
        ec2_id: "{{ ec2.instances[0].instance_id }}"

    - name: Wait
      ansible.builtin.wait_for:
        host: "{{ ec2.instances[0].public_ip_address }}"
        port: 22
        delay: 10
        timeout: 300
        state: started

    - name: Add new EC2 instance to dynamic inventory
      add_host:
        name: "{{ ec2.instances[0].public_ip_address }}"
        groups: launched
        ansible_user: ubuntu
        ansible_ssh_private_key_file: devops_september.pem

- name: Install Docker and run container
  hosts: launched
  become: yes
  gather_facts: yes
  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Enable and start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Run Docker container
      community.docker.docker_container:
        name: web
        image: "nginx:latest"
        state: started
        ports:
          - "80:80"

- name: Remove instance
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Terminate the instance
      amazon.aws.ec2_instance:
        instance_ids: "{{ ec2_id }}"
        region: "us-east-1"
        state: absent
